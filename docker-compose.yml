version: "3.8"

services:
  gateway:
    build: ./gateway
    ports:
      - "80:80"
    networks:
      - my-network
    depends_on:
      - user_service
      - movie_service
      - list_service
      - reco_service

  user_service:
    build: ./user_service
    networks:
      - my-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_db

  movie_service:
    build: ./movie_service
    networks:
      - my-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/movie_db

  reco_service:
    build: ./reco_service
    networks:
      - my-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/reco_db

  list_service:
    build: ./list_service
    networks:
      - my-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/list_db

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: nathan@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres
    networks:
      - my-network
    volumes:
      - ./servers.json:/pgadmin/servers.json
    entrypoint:
      - /bin/sh
      - -c
      - mkdir -p /var/lib/pgadmin/storage/nathan_gmail.com && cp /pgadmin/servers.json /var/lib/pgadmin/storage/nathan_gmail.com/servers.json && /entrypoint.sh

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - my-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
