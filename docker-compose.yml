version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    networks:
      - my-network
    depends_on:
      - gateway

  gateway:
    build: ./gateway
    ports:
      - "80:80"
    networks:
      - my-network
    depends_on:
      - user_service
      # - movie_service
      # - reco_service
      # - list_service

  user_service:
    build: ./user_service
    networks:
      - my-network
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/user_db

  # movie_service:
  #   build: ./movie_service
  #   networks:
  #     - my-network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/movie_db

  # reco_service:
  #   build: ./reco_service
  #   networks:
  #     - my-network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/reco_db

  # list_service:
  #   build: ./list_service
  #   networks:
  #     - my-network
  #   depends_on:
  #     - postgres
  #   environment:
  #     - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/list_db

  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - my-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres/init_user_db.sql:/docker-entrypoint-initdb.d/init_user_db.sql
      - ./postgres/init_movie_db.sql:/docker-entrypoint-initdb.d/init_movie_db.sql
      - ./postgres/init_reco_db.sql:/docker-entrypoint-initdb.d/init_reco_db.sql
      - ./postgres/init_list_db.sql:/docker-entrypoint-initdb.d/init_list_db.sql

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
